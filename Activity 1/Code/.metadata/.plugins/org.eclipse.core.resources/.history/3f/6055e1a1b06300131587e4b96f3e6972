package aspects.encyption;

import java.security.Key;

import joinpoints.communication.ReceiveEventJP;
import joinpoints.communication.SendEventJP;

import org.apache.log4j.Logger;

import utilities.Encoder;
import utilities.Message;
import baseaspects.communication.OneWayReceiveAspect;
import baseaspects.communication.OneWaySendAspect;

public aspect DecryptionAspect extends OneWayReceiveAspect
{
	private Logger logger = Logger.getLogger(OneWaySendAspect.class);			
	public Message decryptedMessage;
	
	Object around (ReceiveEventJP _receiveEventJp): ConversationEnd( _receiveEventJp)
	{
		byte[] msg =  (byte[]) Encoder.decode(_receiveEventJp.getBytes());
		String name = "Server", password = "abcdef";
		
		
		if (msg.getClass().getSimpleName()=="Server")
		{
			//KMClient keyClient = new KMClient();
			
			KeyManager kmanager = new KeyManager();
			try 
			{
				Encryption encryption = new Encryption();
				if (kmanager.authenticate(name, password) == true)
				{
					
					SharedKey sKey = (SharedKey) encryption.getSharedKey();
					decryptedMessage = encryption.Decrypt(msg, (Key)sKey);
					System.out.println(decryptedMessage);
				}
			} catch (Exception e) {
				
				e.printStackTrace();
			}
			_receiveEventJp.setBytes(Encoder.decode(msg));
		}
		return proceed(_receiveEventJp);
	}
}
