package aspects.encyption;

import org.apache.log4j.Logger;

import joinpoints.communication.SendEventJP;
import universe.Conversation;
import utilities.Encoder;
import utilities.IMessage;
import utilities.Message;
import baseaspects.communication.OneWaySendAspect;
/*//=====================

String name = "client", password = "abcdef";

//


						
//

	
//	byte[] emessage = encryption.Encrypt(msg, );

		
//=========================*/

public aspect EncryptionAspect extends OneWaySendAspect
{
	private Logger logger = Logger.getLogger(OneWaySendAspect.class);			
	
	before(SendEventJP _sendJp) : MessageSend( _sendJp) 
	{
		
	}
	
	before(SendEventJP _sendEventJp): ConversationBegin(_sendEventJp)
	{
		Message msg =  (Message)Encoder.decode(_sendEventJp.getBytes());
		createConnection( "client",  "abcdef");
		
		
		
		/*String sendTime = getCurrentTime();
     	
     	String logString = "OneWaySend: Sender: "+getTargetClass() + " - Message "+ msg.getClass().getSimpleName() + " [ID = " +_sendEventJp.getConversation().getId().toString()+"] at time "+ sendTime;
		logger.debug(logString);		
		System.out.println(logString);
     	return proceed(_sendEventJp);*/
	}
	public void createConnection(String name, String password)
	{
		KeyRequest keyRequest = new KeyRequest(name, password);
		KMClient keyClient = new KMClient();
		KeyManager kmanager = new KeyManager();
		try 
		{
			Encryption encryption = new Encryption();
			if (kmanager.authenticate(name, password) == true)
			{
				SharedKey sKey = (SharedKey) encryption.getSharedKey();
				encryption.Encrypt(msg, skey);
			}
		} catch (Exception e) {
			
			e.printStackTrace();
		}
		
		
	}

	//public pointcut translationMessage(String data1, String data2) : call(public java.util.UUID.TranslationMessage(data1, data2)) && args( data, data2);
	
	//public pointcut encodingpc(IMessage _data) : call(public static byte[]  utilities.Encoder.encode(..)) && args(_data); 
	
	// I can use the translationMessage to encrypt the message
	
	/*before(IMessage _data) : encodingpc(_data)
	{
		
	}*/
	
	/*before(SendEventJP _sendJp): MessageSend(_sendJp)
	{
		
	}*/
	void around(SendEventJP _sendJp) : MessageSend(_sendJp){
		if(_sendJp.getConversation() == null)
			_sendJp.setConversation(new Conversation());
		
			Begin(_sendJp);
	    	//IMessageExt ext = (IMessageExt) Encoder.decode(_sendJp.getBytes());
	    	//System.out.println("OWS " + ext.getVersion() );
			proceed(_sendJp);
	}

	


}
