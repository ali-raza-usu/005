package aspects.encyption;

import java.security.Key;

import org.apache.log4j.Logger;

import joinpoints.communication.SendEventJP;
import universe.Conversation;
import utilities.Encoder;
import utilities.IMessage;
import utilities.Message;
import baseaspects.communication.OneWaySendAspect;

public aspect EncryptionAspect extends OneWaySendAspect
{
	private Logger logger = Logger.getLogger(OneWaySendAspect.class);			
	public byte[] encryptedMessage;
	Encryption encryption = Encryption.getInstance();
	
	Object around (SendEventJP _sendEventJp): ConversationBegin(_sendEventJp){
		/*
		 * 1. Get the message
		 * 2. Encrypt the message
		 * 3. Set the message to bytes
		 */
		Message msg =  (Message)Encoder.decode(_sendEventJp.getBytes());	
		encryptedMessage = encryption.Encrypt(msg, encryption.getSharedKey());
		System.out.println(encryptedMessage);		
		_sendEventJp.setBytes(Encoder.encode(msg));
		return proceed(_sendEventJp);
	}
	
	public static String getTargetClass() {
		StackTraceElement[] elements = Thread.currentThread().getStackTrace();
		String[] classes = elements[elements.length - 1].getClassName().split("\\.");
		return classes[classes.length - 1];
	}
}
